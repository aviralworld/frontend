variables:
  API_IMAGE: aviralworld/backend
  API_IMAGE_TAG: latest
  NODE_VERSION: 14.7.0-alpine
  NGINX_VERSION: 1.19.6-alpine
  KANIKO_AUTH_CONFIG: >-
        {
          "auths": {
            "$CI_REGISTRY": {
              "username": "$CI_REGISTRY_USER",
              "password": "$CI_REGISTRY_PASSWORD"
            }
          }
        }

stages:
  - test
  - docker-base
  - docker

test:
  stage: test
  image: "shivjm/node-chromium-alpine:node14.15.3-chromium81.0.4044.113"
  services:
    - name: adobe/s3mock:2.1.24@sha256:f444c12e38050dcf339e8784cacfa40d14a4876503d2818982acb7f117ef03df
      alias: s3mock
    - name: $CI_REGISTRY/$API_IMAGE/db:$API_IMAGE_TAG
      alias: db
    - $CI_REGISTRY/$API_IMAGE:$API_IMAGE_TAG
  variables:
    MOCHA_TIMEOUT: "60000"

    POSTGRES_PASSWORD: "1234"
    POSTGRES_DB: aviralworld
    POSTGRES_HOST_AUTH_METHOD: trust
    POSTGRES_USER: postgres

    BACKEND_DB_CONNECTION_STRING: "postgresql://postgres@db:5432/aviralworld"
    BACKEND_S3_ACL: "public-read"
    BACKEND_S3_CACHE_CONTROL: "public, max-age=604800, immutable"
    BACKEND_BASE_URL: "https://www.example.com/"
    BACKEND_RECORDINGS_PATH: "recordings"
    BACKEND_PORT: "3030"
    BACKEND_ADMIN_PORT: "3031"
    BACKEND_TOKENS_PER_RECORDING: "2"

    FRONTEND_API_URL: "http://127.0.0.1:3030/"
    FRONTEND_BASE_URL: "https://example.com/"
    FRONTEND_DEBOUNCE_DELAY_MS: "300"
    FRONTEND_ENABLE_ADMIN_MODE: "1"
    FRONTEND_RANDOM_STORY_COUNT: "3"
    FRONTEND_SERVE_STATIC: "1"
    FRONTEND_COMPRESSION: "1"
    FRONTEND_ADMIN_PORT: "50000"
    FRONTEND_HEALTH_CHECK_TIMEOUT_MS: "1"

    FRONTEND_TEST_NAVIGATION_TIMEOUT: "5000"

    S3_ACCESS_KEY: something
    S3_SECRET_ACCESS_KEY: something_else
    S3_REGION_NAME: fake
    S3_BUCKET_NAME: test
    S3_ENDPOINT: "http://s3mock:9090/"
    S3_BASE_URL: "http://s3mock:9090/"

    INITIALBUCKETS: "test"

    PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: "1"
    PUPPETEER_EXECUTABLE_PATH: "/usr/bin/chromium-browser"

    # for the test script
    PG_CONNECTION_STRING: "postgresql://postgres@db:5432/aviralworld"

    ROARR_LOG: "true"
  before_script:
    - npm i -g pnpm
    - pnpm i -s --frozen-lockfile
  script:
    - pnpm run format:prettier:check
    # ESLint, Svelte, and TypeScript still don't quite seem to gel
    # - pnpm run lint --silent
    - pnpm test
  only:
    - merge_requests
  interruptible: yes

docker-base:
  stage: docker-base
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  artifacts:
    paths:
      - .gitlab-ci-timestamp
  script:
    - echo $KANIKO_AUTH_CONFIG > /kaniko/.docker/config.json
    - export build_timestamp=`date +%Y%m%d%H%M%S`
    - export tag="v$build_timestamp"
    - echo $tag > .gitlab-ci-timestamp
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile.base --cache=true --destination=$CI_REGISTRY_IMAGE/base:$tag --destination=$CI_REGISTRY_IMAGE/base:latest --build-arg NODE_VERSION=$NODE_VERSION --build-arg REVISION=$CI_COMMIT_SHA --build-arg TIMESTAMP=$build_timestamp
    - echo $tag
  only:
    - master

docker:
  stage: docker
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  dependencies:
    - docker-base
  script:
    - echo $KANIKO_AUTH_CONFIG > /kaniko/.docker/config.json
    - export build_timestamp=`date +%Y%m%d%H%M%S`
    - export tag=`echo $(cat .gitlab-ci-timestamp)`
    - echo $tag
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --cache=true --destination=$CI_REGISTRY_IMAGE:$tag --destination=$CI_REGISTRY_IMAGE:latest --build-arg BASE_IMAGE=$CI_REGISTRY_IMAGE/base:$tag --build-arg NODE_VERSION=$NODE_VERSION --build-arg REVISION=$CI_COMMIT_SHA --build-arg TIMESTAMP=$build_timestamp
  only:
    - master

docker-http:
  stage: docker
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  dependencies:
    - docker-base
  script:
    - echo $KANIKO_AUTH_CONFIG > /kaniko/.docker/config.json
    - export build_timestamp=`date +%Y%m%d%H%M%S`
    - export tag=`echo $(cat .gitlab-ci-timestamp)`
    - echo $tag
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile.http --cache=true --destination=$CI_REGISTRY_IMAGE/http:$tag --destination=$CI_REGISTRY_IMAGE/http:latest --build-arg BASE_IMAGE=$CI_REGISTRY_IMAGE/base:$tag --build-arg NGINX_VERSION=$NGINX_VERSION --build-arg REVISION=$CI_COMMIT_SHA --build-arg TIMESTAMP=$build_timestamp
  only:
    - master
